# Autogenerated by mustache from subgraph.template.yaml.
# DO NOT EDIT THIS FILE, EDIT subgraph.template.yaml INSTEAD.
specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: NeuronThetaVaultEthCall
    network: mainnet
    source:
      address: '0x7FD0a65AC12DCF5584b1520C5191Df4bE336a072'
      abi: NeuronThetaVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Approval
        - OwnershipTransferred
        - Transfer
    abis:
      - name: NeuronThetaVault
        file: ./abis/NeuronThetaVault.json
    eventHandlers:
      - event: OpenShort(indexed uint16,indexed address,uint256,address[],uint256[],uint256,indexed address)
        handler: handleOpenShort
      - event: NextRoundParamsSelected(uint16,uint256,uint256,uint256)
        handler: handleNextRoundParamsSelected
      - event: PremiumForRound(indexed uint16,uint256)
        handler: handlePremiumForRound
      - event: PremiumDistribute(indexed uint16,indexed address,uint256)
        handler: handlePremiumDistribute
      # - event: ManagementFeeSet(uint256,uint256)
      #   handler: handleAll
      # - event: PerformanceFeeSet(uint256,uint256)
      #   handler: handleAll
      # - event: CloseShort(indexed address,uint256[],indexed address)
      #   handler: handleAll
      # - event: PremiumDiscountSet(uint256,uint256)
      #   handler: handleAll
      # - event: AuctionDurationSet(uint256,uint256)
      #   handler: handleAll
      # - event: StrikeSelectionSet(indexed address,indexed address)
      #   handler: handleAll
      # - event: OptionsPremiumPricerSet(indexed address,indexed address)
      #   handler: handleAll
      # - event: StrikePriceSet(indexed uint16,indexed uint16,uint256,uint256)
      #   handler: handleAll
      # - event: AuctionStarted((address,address,address,uint256,uint256,uint256),indexed uint256)
      #   handler: handleAll
      # - event: NewKeeperSet(indexed address,indexed address)
      #   handler: handleAll
      # - event: FeeRecipientSet(indexed address,indexed address)
      #   handler: handleAll
      # - event: PremiumDistribute(indexed address,uint256)
      #   handler: handleAll
    file: ./src/mapping.ts
  - kind: ethereum/contract
    name: NeuronCollateralVaultEthCallAleth
    network: mainnet
    source:
      address: '0xB0F1a8fd498c40503fd8c3cc5e48083A4330c231'
      abi: NeuronCollateralVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Approval
        - OwnershipTransferred
        - Transfer
      abis:
        - name: NeuronCollateralVault
          file: ./abis/NeuronCollateralVault.json
        - name: INeuronPool
          file: ./abis/INeuronPool.json
      eventHandlers:
        - event: Deposit(indexed address,uint256,uint256)
          handler: handleCollateralVaultDeposit
        - event: InstantWithdraw(indexed address,uint256,uint256)
          handler: handleCollateralVaultInstantWithdraw
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleCollateralVaultWithdraw
        - event: CloseShort(indexed uint16,uint256)
          handler: handleCollateralVaultCloseShort
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: NeuronCollateralVaultEthCallSteth
    network: mainnet
    source:
      address: '0xE5044023BE16E06e396aCcc9af8D22e2BA12910d'
      abi: NeuronCollateralVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Approval
        - OwnershipTransferred
        - Transfer
      abis:
        - name: NeuronCollateralVault
          file: ./abis/NeuronCollateralVault.json
        - name: INeuronPool
          file: ./abis/INeuronPool.json
      eventHandlers:
        - event: Deposit(indexed address,uint256,uint256)
          handler: handleCollateralVaultDeposit
        - event: InstantWithdraw(indexed address,uint256,uint256)
          handler: handleCollateralVaultInstantWithdraw
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleCollateralVaultWithdraw
        - event: CloseShort(indexed uint16,uint256)
          handler: handleCollateralVaultCloseShort
      file: ./src/mapping.ts
